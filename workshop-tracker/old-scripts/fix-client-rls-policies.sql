-- ====================================================================
-- CLIENT MANAGEMENT RLS POLƒ∞Tƒ∞KALARI D√úZELTME
-- Fix RLS policies for Client Management API access
-- ====================================================================

DO $$
BEGIN
  RAISE NOTICE 'üîê CLIENT RLS POLƒ∞Tƒ∞KALARI D√úZELTME BA≈ûLATILIYOR...';
  RAISE NOTICE 'Fixing Client Management RLS policies...';
  RAISE NOTICE '';
END $$;

-- ====================================================================
-- ADIM 1: MEVCUT RLS POLƒ∞Tƒ∞KALARINI KALDIR
-- ====================================================================

DO $$
BEGIN
  RAISE NOTICE '1Ô∏è‚É£  MEVCUT RLS POLƒ∞Tƒ∞KALARI TEMƒ∞ZLENƒ∞YOR...';
  
  -- Clients tablosundaki t√ºm politikalarƒ± kaldƒ±r
  DROP POLICY IF EXISTS "Users can view own clients" ON clients;
  DROP POLICY IF EXISTS "Users can insert own clients" ON clients;
  DROP POLICY IF EXISTS "Users can update own clients" ON clients;
  DROP POLICY IF EXISTS "Users can delete own clients" ON clients;
  DROP POLICY IF EXISTS "Enable read access for authenticated users" ON clients;
  DROP POLICY IF EXISTS "Enable insert access for authenticated users" ON clients;
  DROP POLICY IF EXISTS "Enable update access for authenticated users" ON clients;
  DROP POLICY IF EXISTS "Enable delete access for authenticated users" ON clients;
  
  RAISE NOTICE '‚úÖ Mevcut RLS politikalarƒ± temizlendi';
END $$;

-- ====================================================================
-- ADIM 2: RLS'ƒ∞ ETKINLE≈ûTIR
-- ====================================================================

DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '2Ô∏è‚É£  RLS ETKINLE≈ûTƒ∞RME...';
  
  -- Clients tablosunda RLS'i etkinle≈ütir
  ALTER TABLE clients ENABLE ROW LEVEL SECURITY;
  
  RAISE NOTICE '‚úÖ Clients tablosunda RLS etkinle≈ütirildi';
END $$;

-- ====================================================================
-- ADIM 3: YENƒ∞ RLS POLƒ∞Tƒ∞KALARI OLU≈ûTUR
-- ====================================================================

-- READ policy - Authenticated users can read all clients
CREATE POLICY "clients_read_policy" ON clients
  FOR SELECT
  TO authenticated
  USING (true);

-- INSERT policy - Authenticated users can insert clients
CREATE POLICY "clients_insert_policy" ON clients
  FOR INSERT
  TO authenticated
  WITH CHECK (auth.uid() IS NOT NULL);

-- UPDATE policy - Users can update clients they created
CREATE POLICY "clients_update_policy" ON clients
  FOR UPDATE
  TO authenticated
  USING (created_by = auth.uid())
  WITH CHECK (created_by = auth.uid());

-- DELETE policy - Users can delete clients they created
CREATE POLICY "clients_delete_policy" ON clients
  FOR DELETE
  TO authenticated
  USING (created_by = auth.uid());

-- ====================================================================
-- ADIM 4: PROFILES TABLOSU RLS POLƒ∞Tƒ∞KALARI
-- ====================================================================

DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '3Ô∏è‚É£  PROFILES RLS POLƒ∞Tƒ∞KALARI KONTROL EDƒ∞Lƒ∞YOR...';
  
  -- Profiles tablosunda RLS'i etkinle≈ütir (eƒüer deƒüilse)
  ALTER TABLE profiles ENABLE ROW LEVEL SECURITY;
  
  RAISE NOTICE '‚úÖ Profiles tablosunda RLS etkinle≈ütirildi';
END $$;

-- Profiles READ policy - Authenticated users can read all profiles
DO $$
BEGIN
  -- Mevcut policy varsa kaldƒ±r
  DROP POLICY IF EXISTS "profiles_read_policy" ON profiles;
  
  -- Yeni policy olu≈ütur
  CREATE POLICY "profiles_read_policy" ON profiles
    FOR SELECT
    TO authenticated
    USING (true);
    
  RAISE NOTICE '‚úÖ Profiles read policy olu≈üturuldu';
EXCEPTION
  WHEN duplicate_object THEN
    RAISE NOTICE '‚ö†Ô∏è  Profiles read policy zaten mevcut';
END $$;

-- ====================================================================
-- ADIM 5: PUBLIC SCHEMA ERƒ∞≈ûƒ∞M ƒ∞ZINLERƒ∞
-- ====================================================================

-- Authenticated role'a gerekli izinleri ver
GRANT USAGE ON SCHEMA public TO authenticated;
GRANT SELECT, INSERT, UPDATE, DELETE ON clients TO authenticated;
GRANT SELECT ON profiles TO authenticated;

-- ====================================================================
-- ADIM 6: ANON ERƒ∞≈ûƒ∞M ƒ∞ZINLERƒ∞ (API i√ßin)
-- ====================================================================

-- Anon role'a gerekli izinleri ver (Supabase API i√ßin)
GRANT USAGE ON SCHEMA public TO anon;
GRANT SELECT ON clients TO anon;
GRANT SELECT ON profiles TO anon;

-- ====================================================================
-- ADIM 7: RLS POLƒ∞Tƒ∞KA TESTLERƒ∞
-- ====================================================================

-- Mevcut politikalarƒ± listele
SELECT 
  'üîç CLIENTS RLS POLƒ∞Tƒ∞KALARI' as check_name,
  schemaname,
  tablename,
  policyname,
  permissive,
  roles,
  cmd,
  qual,
  with_check
FROM pg_policies 
WHERE schemaname = 'public' 
  AND tablename = 'clients'
ORDER BY policyname;

-- Profiles politikalarƒ±nƒ± listele
SELECT 
  'üîç PROFILES RLS POLƒ∞Tƒ∞KALARI' as check_name,
  schemaname,
  tablename,
  policyname,
  permissive,
  roles,
  cmd,
  qual,
  with_check
FROM pg_policies 
WHERE schemaname = 'public' 
  AND tablename = 'profiles'
ORDER BY policyname;

-- ====================================================================
-- ADIM 8: SAMPLE DATA ƒ∞LE TEST
-- ====================================================================

-- Eƒüer client verisi yoksa sample data olu≈ütur
DO $$
DECLARE
  client_count INTEGER;
  profile_count INTEGER;
  first_profile_id UUID;
BEGIN
  SELECT COUNT(*) INTO client_count FROM clients;
  SELECT COUNT(*) INTO profile_count FROM profiles;
  
  RAISE NOTICE '';
  RAISE NOTICE '4Ô∏è‚É£  SAMPLE DATA KONTROL...';
  RAISE NOTICE '   - Clients: % kayƒ±t', client_count;
  RAISE NOTICE '   - Profiles: % kayƒ±t', profile_count;
  
  -- Eƒüer profiles varsa ama clients yoksa sample data olu≈ütur
  IF profile_count > 0 AND client_count = 0 THEN
    RAISE NOTICE '';
    RAISE NOTICE 'üí° SAMPLE CLIENT OLU≈ûTURULUYOR...';
    
    -- ƒ∞lk profile'ƒ± al
    SELECT id INTO first_profile_id FROM profiles ORDER BY created_at ASC LIMIT 1;
    
    -- Sample clients olu≈ütur
    INSERT INTO clients (full_name, email, phone, created_by, company, address, notes)
    VALUES 
      ('Sarah Johnson', 'sarah.johnson@email.com', '+1 (555) 123-4567', first_profile_id, 'Art Studio Inc', '123 Main St, City', 'Regular pottery class attendee'),
      ('Michael Chen', 'michael.chen@email.com', '+1 (555) 987-6543', first_profile_id, 'Creative Co', '456 Oak Ave, Town', 'Interested in painting workshops'),
      ('Emily Rodriguez', 'emily.rodriguez@email.com', '+1 (555) 456-7890', first_profile_id, 'Freelance', '789 Pine Rd, Village', 'Digital art enthusiast'),
      ('David Kim', 'david.kim@email.com', '+1 (555) 234-5678', first_profile_id, 'Design House', '321 Elm St, County', 'Ceramic art workshops'),
      ('Lisa Thompson', 'lisa.thompson@email.com', '+1 (555) 345-6789', first_profile_id, 'Self-employed', '654 Maple Ave, District', 'Mixed media artist');
    
    RAISE NOTICE '‚úÖ 5 sample client olu≈üturuldu';
  ELSE
    RAISE NOTICE '‚úÖ Client verisi zaten mevcut';
  END IF;
END $$;

-- ====================================================================
-- ADIM 9: SON KONTROL VE DOƒûRULAMA
-- ====================================================================

-- API sorgusu test et
SELECT 
  'üéØ API SORGU TESTƒ∞' as test_name,
  c.id,
  c.full_name,
  c.email,
  c.phone,
  c.company,
  c.created_at,
  c.created_by,
  p.full_name as creator_name,
  p.email as creator_email
FROM clients c
LEFT JOIN profiles p ON c.created_by = p.id
ORDER BY c.created_at DESC
LIMIT 5;

-- Tablo eri≈üim izinlerini kontrol et
SELECT 
  'üîê TABLO ERƒ∞≈ûƒ∞M ƒ∞ZINLERƒ∞' as check_name,
  schemaname,
  tablename,
  tableowner,
  hasselect,
  hasinsert,
  hasupdate,
  hasdelete
FROM pg_tables 
WHERE schemaname = 'public' 
  AND tablename IN ('clients', 'profiles');

-- ====================================================================
-- FINAL √ñZET
-- ====================================================================

DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '=== CLIENT MANAGEMENT RLS D√úZELTME √ñZET ===';
  RAISE NOTICE '';
  RAISE NOTICE 'YAPILAN ƒ∞Yƒ∞LE≈ûTƒ∞RMELER:';
  RAISE NOTICE '‚úÖ Clients tablosunda RLS etkinle≈ütirildi';
  RAISE NOTICE '‚úÖ 4 adet RLS policy olu≈üturuldu:';
  RAISE NOTICE '   - clients_read_policy (t√ºm authenticated users)';
  RAISE NOTICE '   - clients_insert_policy (authenticated users)';
  RAISE NOTICE '   - clients_update_policy (sadece creator)';
  RAISE NOTICE '   - clients_delete_policy (sadece creator)';
  RAISE NOTICE '‚úÖ Profiles tablosunda read policy olu≈üturuldu';
  RAISE NOTICE '‚úÖ Authenticated ve anon role izinleri verildi';
  RAISE NOTICE '‚úÖ Sample data olu≈üturuldu (gerekirse)';
  RAISE NOTICE '';
  RAISE NOTICE 'SONRAKƒ∞ ADIMLAR:';
  RAISE NOTICE '1. Frontend''i yenileyin (Ctrl+F5)';
  RAISE NOTICE '2. Browser console''daki hatalarƒ± kontrol edin';
  RAISE NOTICE '3. Network tab''ta API isteklerini kontrol edin';
  RAISE NOTICE '4. Client Management sayfasƒ±nƒ± test edin';
  RAISE NOTICE '';
  RAISE NOTICE 'D√ºzeltme tarihi: %', NOW();
END $$; 